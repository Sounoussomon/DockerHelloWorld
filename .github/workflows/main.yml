name: Development Pipeline

on:
  push:
    branches:
    - main

env:
  DOCKER_IMAGE_FE: ghcr.io/sounoussomon/dockerhelloworld
  VERSION: ${{ github.sha }}
jobs:
  build_FE:
    name: Build Frontend Development
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}
      - name: Build image and push to GitHub Container Registry 
        env:
          IMAGE_TAG: ${{ env.VERSION }}
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ env.DOCKER_IMAGE_FE }}:${{ env.VERSION }}
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    needs: [build_FE]
    name: Deploy Frontend devleopment
    runs-on: [self-hosted, linux, x64, development]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}
      - name: Docker run
        run: |
          docker ps -q --filter "name=frontend-app" | grep -q . && docker stop frontend-app
          docker container rm -f frontend-app || true
          docker pull ${{ env.DOCKER_IMAGE_FE }}:${{ env.VERSION }}
          docker run -p 80:5000 -d --restart always --name frontend-app ${{ env.DOCKER_IMAGE_FE }}:${{ env.VERSION }}
          
